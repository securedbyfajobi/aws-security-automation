# AWS Security Automation Configuration
# Generated by Ansible on {{ ansible_date_time.iso8601 }}

aws:
  region: {{ aws_region | default('eu-west-2') }}
  profile: {{ aws_profile | default('default') }}

logging:
  level: {{ log_level | default('INFO') }}
  file: /var/log/security-automation/app.log
  max_size: 100MB
  backup_count: 5
  format: "%(asctime)s - %(name)s - %(levelname)s - %(message)s"

database:
  host: {{ db_host | default('localhost') }}
  port: {{ db_port | default(5432) }}
  name: {{ db_name | default('security_automation') }}
  user: {{ db_user | default('security') }}
  password: "{{ db_password | default('changeme') }}"
  pool_size: {{ db_pool_size | default(10) }}

redis:
  host: {{ redis_host | default('localhost') }}
  port: {{ redis_port | default(6379) }}
  db: {{ redis_db | default(0) }}
  password: "{{ redis_password | default('') }}"

monitoring:
  enabled: {{ monitoring_enabled | default(true) }}
  port: {{ monitoring_port | default(8000) }}
  metrics_path: /metrics

guardduty:
  enabled: {{ guardduty_enabled | default(true) }}
  detector_id: "{{ guardduty_detector_id | default('') }}"
  finding_types:
    - Backdoor
    - CryptoCurrency
    - Malware
    - Policy
    - Reconnaissance
    - ResourceConsumption
    - Stealth
    - TrojanHorse
    - UnauthorizedAccess
  notification:
    sns_topic: "{{ guardduty_sns_topic | default('') }}"
    slack_webhook: "{{ guardduty_slack_webhook | default('') }}"

security_hub:
  enabled: {{ securityhub_enabled | default(true) }}
  standards:
    - aws-foundational-security-standard
    - cis-aws-foundations-benchmark
    - pci-dss
  severity_levels:
    - CRITICAL
    - HIGH
    - MEDIUM
  notification:
    sns_topic: "{{ securityhub_sns_topic | default('') }}"
    email: "{{ securityhub_email | default('') }}"

compliance:
  enabled: {{ compliance_enabled | default(true) }}
  frameworks:
    - CIS
    - NIST
    - SOC2
    - PCI-DSS
  scan_schedule: "{{ compliance_scan_schedule | default('0 2 * * 0') }}"  # Weekly on Sunday at 2 AM

iam_analyzer:
  enabled: {{ iam_analyzer_enabled | default(true) }}
  scan_interval: {{ iam_scan_interval | default(3600) }}  # 1 hour
  policy_types:
    - managed
    - inline
    - trust

cloudtrail:
  enabled: {{ cloudtrail_enabled | default(true) }}
  log_groups:
{% for log_group in cloudtrail_log_groups | default(['/aws/cloudtrail/security-automation']) %}
    - {{ log_group }}
{% endfor %}
  alert_rules:
    - failed_logins
    - privilege_escalation
    - unusual_activity

cost_optimization:
  enabled: {{ cost_optimization_enabled | default(true) }}
  thresholds:
    daily: {{ cost_daily_threshold | default(100) }}
    monthly: {{ cost_monthly_threshold | default(3000) }}
  notification:
    email: "{{ cost_notification_email | default('') }}"

incident_response:
  enabled: {{ incident_response_enabled | default(true) }}
  auto_remediation: {{ auto_remediation_enabled | default(false) }}
  notification:
    pagerduty_key: "{{ pagerduty_integration_key | default('') }}"
    slack_webhook: "{{ incident_slack_webhook | default('') }}"

# Feature flags
features:
  auto_disable_compromised_resources: {{ auto_disable_compromised | default(false) }}
  quarantine_infected_instances: {{ quarantine_instances | default(false) }}
  automated_policy_updates: {{ auto_policy_updates | default(false) }}
  threat_intelligence_feed: {{ threat_intel_enabled | default(true) }}