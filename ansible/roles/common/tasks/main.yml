---
- name: Set timezone
  timezone:
    name: "{{ timezone | default('UTC') }}"
  tags: [timezone]

- name: Install essential packages
  package:
    name:
      - curl
      - wget
      - unzip
      - git
      - htop
      - vim
      - jq
      - python3
      - python3-pip
      - awscli
    state: present
  tags: [packages]

- name: Create security automation user
  user:
    name: security
    comment: "Security Automation Service User"
    home: /home/security
    shell: /bin/bash
    system: yes
    create_home: yes
  tags: [users]

- name: Create application directories
  file:
    path: "{{ item }}"
    state: directory
    owner: security
    group: security
    mode: '0755'
  loop:
    - /opt/security-automation
    - /var/log/security-automation
    - /etc/security-automation
  tags: [directories]

- name: Configure log rotation
  copy:
    content: |
      /var/log/security-automation/*.log {
          daily
          missingok
          rotate {{ log_retention_days | default(30) }}
          compress
          notifempty
          create 644 security security
          sharedscripts
          postrotate
              systemctl reload security-automation || true
          endscript
      }
    dest: /etc/logrotate.d/security-automation
    mode: '0644'
  tags: [logging]

- name: Install Python dependencies
  pip:
    name:
      - boto3
      - botocore
      - requests
      - pyyaml
      - prometheus-client
      - psutil
    state: present
    executable: pip3
  tags: [python]

- name: Configure NTP
  block:
    - name: Install chrony (RHEL/CentOS/Amazon Linux)
      package:
        name: chrony
        state: present
      when: ansible_os_family == "RedHat"

    - name: Install ntp (Ubuntu/Debian)
      package:
        name: ntp
        state: present
      when: ansible_os_family == "Debian"

    - name: Configure chrony
      template:
        src: chrony.conf.j2
        dest: /etc/chrony.conf
        backup: yes
      when: ansible_os_family == "RedHat"
      notify: restart chrony

    - name: Configure ntp
      template:
        src: ntp.conf.j2
        dest: /etc/ntp.conf
        backup: yes
      when: ansible_os_family == "Debian"
      notify: restart ntp
  tags: [ntp]

- name: Set kernel parameters for performance
  sysctl:
    name: "{{ item.name }}"
    value: "{{ item.value }}"
    state: present
    reload: yes
  loop:
    - { name: vm.swappiness, value: 10 }
    - { name: net.core.rmem_max, value: 134217728 }
    - { name: net.core.wmem_max, value: 134217728 }
    - { name: net.ipv4.tcp_rmem, value: "4096 65536 134217728" }
    - { name: net.ipv4.tcp_wmem, value: "4096 65536 134217728" }
  tags: [performance]